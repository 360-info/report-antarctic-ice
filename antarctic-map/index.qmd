---
# omit title and subtitle if you're doing a custom title block
title: Untitled
subtitle: A thing here
# for social previews
pagetitle: Untitled
description: A description for social previews
twitter-card:
  site: "@360info_global"
  image: "/folder/example.png"
open-graph:
  image: "/folder/example.png"
resources:
  - example.png
format:
  360-embed-html: default
# metadata for modals and embed sharing functionality
360embed:
  byline: James Goldie, 360info
  data-source: XXX
  type: map
  aspect-ratio: 20 / 19
  min-height: 500px
  bg-colour: white
  title: "Interactive: title"
  domain: https://example.360visuals.org
  fragments: state, month
  path: /map/
  about: |
    Here's a place to **tell people** and [link to things](https://example.com)!
---

{{< include _popups/_buttons.qmd >}}

<!-- geotiff in observable plot:
// https://observablehq.com/@neocartocnrs/display-and-project-a-geotiff-with-plot -->

```{ojs}
//| label: winding-fix
turf = require("@turf/turf")
FA = FileAttachment

async function fixedGeoJSON(x) {
  const raw = await FA(x).json()
  console.log("Raw " + x + ":", raw)
  raw.features = raw.features.map(function(f) {
    return turf.rewind(f, { reverse:true });
  })
  return raw
}

bedOutline = fixedGeoJSON("/data/bedmap2/bedmap2_bed_outline.geojson")

landIceOutline = fixedGeoJSON("/data/bedmap2/bedmap2_surface_outline.geojson")
```

```{ojs}
//| label: map

Plot.plot({
  projection: ({width, height}) => d3.geoAzimuthalEquidistant()
    .rotate([0, 90])
    .translate([width / 2, height / 2])
    .scale(width / 1.2)
    .clipAngle(40),
  r: {transform: (d) => Math.pow(10, d)}, // convert Richter to amplitude
  marks: [
    Plot.geo(bedOutline, {fill: "#ffaa66", stroke: "#dd0000", fillOpacity: 0.2}),
    Plot.geo(landIceOutline, {fill: "#66aaff", stroke: "#333333", fillOpacity: 0.2}),
    Plot.graticule(),
    Plot.sphere(),
  ]
})
```

{{< include _popups/_dialogs.qmd >}}
