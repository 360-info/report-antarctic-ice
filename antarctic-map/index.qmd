---
# for social previews
pagetitle: "Interactive: exploring Antarctica's ice"
description: There's more to Antarctica than the ice you see on the maps.
twitter-card:
  site: "@360info_global"
  image: "/antarctic-map/antarcticmap-banner.png"
open-graph:
  image: "/antarctic-map/antarcticmap-banner.png"
resources:
  - "/antarctic-map/antarcticmap-banner.png"
format:
  360-embed-html: default
# metadata for modals and embed sharing functionality
360embed:
  byline: "James Goldie, 360info"
  data-source: "Bedmap2, NSIDC"
  type: map
  aspect-ratio: 13 / 20
  min-height: 500px
  max-height: 893px
  bg-colour: white
  title: "Interactive: exploring Antarctica's ice"
  repo: report-antarctic-ice
  domain: https://antarcticamap.360visuals.org
  path: /antarctic-map/
  fragments: 
  about: |
    Data underpinning this map of Antarctica comes from three sources.<br><br>
    The map of the bedrock elevation and the land ice boundaries comes from the [Bedmap2](https://tc.copernicus.org/articles/7/375/2013/tc-7-375-2013.html) project ([Fretwell et al. 2013](https://doi.org/10.5194/tc-7-375-2013)).<br><br>
    Data on the typical sea ice borders over the year for the 1981-2010 period come from the [National Sea and Ice Data Center](https://nsidc.org)’s [Sea Ice Index](https://nsidc.org/data/g02135/versions/3).<br><br>
    The locations of Antarctic glaciers come from the NSIDC’s [GLIMS Glacier Database](https://nsidc.org/data/nsidc-0272/versions/1).
---

{{< include _popups/_buttons.qmd >}}

<!-- geotiff in observable plot:
// https://observablehq.com/@neocartocnrs/display-and-project-a-geotiff-with-plot -->


```{ojs}
//| label: load-data
turf = require("@turf/turf@6.5.0")
FA = FileAttachment

// use turf.js to make the geojson winding order compatible with d3.js
async function fixedGeoJSON(x) {
  const raw = await FA(x).json()
  raw.features = raw.features.map(function(f) {
    return turf.rewind(f, { reverse: true });
  })
  return raw
}

// bedHeights = fixedGeoJSON("/data/bedmap2/bedmap2_bed_heights.geojson")
bedHeights = FA("/data/bedmap2/bedmap2_bed_heights.geojson").json()
landIceOutline = fixedGeoJSON("/data/bedmap2/bedmap2_surface_outline.geojson")
// seaIceOutline = fixedGeoJSON("/data/nsidc/seaice_median.geojson")
glacierPoints = FA("/data/nsidc/glaciers-antarctica.csv").csv()
seaIceRegions = FA("/data/nsidc/seaice_median_hulls.geojson").json()

// filter the sea ice regions on a timer
currentSeaIceRegion = ({
  ...seaIceRegions,
  features: seaIceRegions.features.filter(
      d => parseInt(d.properties.month) == monthTimer + 1)
})
```

:::{.header-block}

```{ojs}
//| label: commentary
//| classes: commentary
comments = [
    md`When you think of Antarctica, you probably think of its ice. But underneath is a continent, with rock rising above sea level.`,
    md`A sheet of ice sits over nearly all of the land, as well as some of the shallow waters — kilometres thick in many places.`,
    md`The massive ice sheet isn’t still—it very slowly flows into the sea in rivers called glaciers.<br><br>NASA says that melting of the ice sheets has contributed to one third of the sea rise we've seen since 1993.`,
    md`Most of the melt currently comes from areas where part of the ice sheet sits over the ocean, as a bookshelf hangs onto a wall.<br><br>This is called an ice shelf. Ice shelves often act as plugs, holding glaciers in.`,
    md`Ross Ice Shelf and Ronne Ice Shelf are two of the biggest, but smaller ones hang all around the edge of Antarctica.`,
    md`Modelling has found that glacial ice flowing into the Amundsen Sea is vulnerable to warming, and that its melt could destabilise larger areas.<br><br> Thwaites glacier alone could eventually raise sea levels by 65cm if the ice shelf holding it back collapses.`,
    md`Thinner ice also forms on the waters surrounding Antarctica. This sea ice grows in the winter and shrinks in the summer.`,
    md`Although the sea ice covers a large area, it does not directly influence sea rise, as it already rests on the water.<br><br>But the sea ice does protect the ice sheet from being battered by the ocean and winds.`,
    md`The sea ice was stable until 2016, when it started shrinking.<br><br>Scientists want to understand this sudden reversal before the sea ice melts further and exposes more of the ice sheet.`
]
comments[storyStep]
```

```{ojs}
//| label: advance-buttons

viewof storyStep = Inputs.button(
  [
    ["→",
      value => {
        const maxVal = comments.length;
        if (value == maxVal - 2) {
          // console.log("Disabling button after this click", this)
          this.disabled = true
          document
            .querySelector("#advance-buttons button:first-child")
            .disabled = true
        } else {
          // console.log("Enabling button", this)
          document
            .querySelector("#advance-buttons button:first-child")
            .disabled = false
        }
        return value < maxVal - 1 ? value + 1 : value
      }
    ],
    ["↩",
      () => {
        document
          .querySelector("#advance-buttons button:first-child")
          .disabled = false
        return 0
      }
    ],
  ], {
    value: 0,
    id: "storyStepsBtns"
  })
```

:::

```{ojs}
//| label: map

antarcticMap = Plot.plot({
  // projection: "equal-earth",
  // projection: {type: "orthographic", rotate: [0, -30, 20]},
  projection: ({width, height}) => d3.geoAzimuthalEquidistant()
    .rotate([0, 90])
    .translate([width / 2, height / 2])
    .scale(width / 1.05)
    .clipAngle(40),
  color: {
    type: "ordinal",
    range: [
        "#084594",
        "#2171b5",
        "#4292c6",
        "#6baed6",
        "#9ecae1",
        "#c6dbef",
        // "#eff3ff",
        "#effaff",
        "#fec44f",
        "#ec7014",
        "#cc4c02",
        "#993404"
        ],
    legend: true,
    swatchWidth: 25
  },
  marks: [
    pattern,
    Plot.geo(bedHeights, {
      fill: d => d.properties.hi / 1000,
      fillOpacity: 0.75,
      stroke: null,
      ariaDescription: "A map showing the elevation (or depth, where it is below sea level) of the bedrock of Antarctica. Parts of the bedrock are over two kilometres above sea level."
    }),
    Plot.text(labelContinents, {
      ariaHidden: "true",
      text: "t",
      x: "x",
      y: "y",
      fill: "lightgrey",
      lineWidth: 12,
      fontSize: 18,
      fontFamily: "Roboto Condensed",
      fontStyle: "italic"
    }),
    /* there's some complexity here with duplicate layers as the layers that
       fade in can't be displayed at the same time as the ones that animate
       on the timer (render transform limitation) */
    storyStep >= 1 && storyStep <= 5 ? landIceOutlineLayerWithFade : null,
    storyStep == 2 ? glacierPointLayerWithFade : null,
    storyStep == 3 || storyStep == 4 ? iceShelfArrowLayerWithFade : null,
    storyStep == 3 || storyStep == 4 ? iceShelfLabelLayerWithFade : null,
    storyStep == 5 ? thwaitesGlacierPointLayerWithFade : null,
    storyStep == 5 ? thwaitesGlacierArrowLayerWithFade : null,
    storyStep == 5 ? thwaitesGlacierLabelLayerWithFade : null,
    storyStep >= 6 ? seaIceRegionLayer : null,
    storyStep >= 6 ? landIceOutlineLayer : null,
    storyStep >= 6 ? seaIceLabelLayer : null,
  ],
  height: 800,
  insetTop: 0
})
```

```{ojs}
//| label: layer-defs
landIceOutlineLayerWithFade = Plot.geo(landIceOutline, {
  fill: "url(#stripes)",
  stroke: "#333333",
  strokeWidth: 1,
  fillOpacity: 0.75,
  render: fadeLayerIn,
  ariaDescription: "An outline of the parts of Antarctica covered with ice. This is typically the outline you see on maps."
})
landIceOutlineLayer = Plot.geo(landIceOutline, {
  fill: "url(#stripes)",
  stroke: "#333333",
  strokeWidth: 1,
  fillOpacity: 0.75,
  ariaHidden: true
})
iceShelfArrowLayerWithFade = Plot.arrow(labelShelves, {
  x1: "xfrom",
  y1: "yfrom",
  x2: "xto",
  y2: "yto",
  bend: true,
  stroke: "navy",
  strokeWidth: 3,
  render: fadeLayerIn,
  aria: true
})
iceShelfLabelLayerWithFade = Plot.text(labelShelves, {
  text: d => d.t.toUpperCase(),
  x: "xfrom",
  y: d => d.yfrom + 2.5, // shift labels outward, not up/down
  stroke: "lightcyan",
  fill: "navy",
  strokeWidth: 4,
  fontSize: 24,
  fontFamily: "Roboto Condensed",
  fontWeight: "bold",
  lineWidth: 15,
  render: fadeLayerIn,
  ariaLabel: d => d.t
})
glacierPointLayerWithFade = Plot.dot(glacierPoints, {
  x: "lon",
  y: "lat",
  r: 2.5,
  // opacity: 0.75,
  fill: "red",
  stroke: "#00000099",
  strokeWidth: 0.5,
  render: fadeLayerIn,
  ariaDescription: "Points around the edges of Antarctic marking glaciers: slow-moving rivers of ice."
})
thwaitesGlacierPointLayerWithFade = Plot.dot(
  [{ lon: -106.75, lat: -75.5 }], {
  x: "lon",
  y: "lat",
  r: 4.5,
  fill: "navy",
  stroke: "lightcyan",
  strokeWidth: 0.5,
  symbol: "triangle",
  render: fadeLayerIn,
  ariaHidden: true
})
thwaitesGlacierArrowLayerWithFade = Plot.arrow(labelThwaites, {
  x1: "xfrom",
  y1: "yfrom",
  x2: d => d.xto - 3.5,
  y2: "yto",
  bend: true,
  stroke: "navy",
  strokeWidth: 3,
  render: fadeLayerIn,
  ariaLabel: d => d.t
})
thwaitesGlacierLabelLayerWithFade = Plot.text(labelThwaites, {
  text: d => d.t.toUpperCase(),
  x: d => d.xfrom - 2.5,
  y: "yfrom", // shift labels outward, not up/down
  textAnchor: "end",
  stroke: "lightcyan",
  fill: "navy",
  strokeWidth: 4,
  fontSize: 18,
  fontFamily: "Roboto Condensed",
  fontWeight: "bold",
  lineWidth: 10,
  render: fadeLayerIn,
  ariaHidden: true
})
seaIceRegionLayer = Plot.geo(currentSeaIceRegion, {
  fill: "#dddddd",
  stroke: "#eeeeee",
  strokeWidth: 1,
  fillOpacity: 0.65,
  ariaHidden: true
})
seaIceLabelLayer = Plot.text(labelSeaIce,
{
  text: d => d.t.toUpperCase(),
  x: "x",
  y: "y",
  textAnchor: "start",
  stroke: "white",
  fill: "#666666",
  strokeWidth: 4,
  fontSize: 24,
  fontFamily: "Roboto Condensed",
  fontWeight: "bold",
  lineWidth: 20,
  ariaLabel: d => d.t
})
```

```{ojs}
//| label: map-labels
labelShelves = [
  { 
    t: "Ross Ice Shelf",
    xfrom: -165.625245,
    yfrom: -70.639197,
    xto: -176.463560,
    yto: -80.399690
  }, {
    t: "Ronne Ice Shelf",
    xfrom: -43.884332,
    yfrom: -72.110015,
    xto: -68.884332,
    yto: -80.110015
  }
]

labelThwaites = [
  { 
    t: "Thwaites glacier & ice shelf",
    xfrom: -123.75,
    yfrom: -73,
    xto: -106.75,
    yto: -75.5
  }
]

labelContinents = [
  {
    x: 135,
    y: -53.5,
    t: "AUSTRALIA"
  },
  {
    x: 25,
    y: -55,
    t: "AFRICA"
  },
  {
    x: -45,
    y: -52.5,
    t: "SOUTH\nAMERICA"
  },
]
months = ["January", "February", "March", "April", "May", "June", "July",
  "August", "September", "October", "November", "December"]
labelSeaIce = [
  {
    x: -123,
    y: -55.5,
    t: `Typical sea ice in ${months[monthTimer]}`
  }
]
```

```{ojs}
//| label: fade-in-out
// this render transform fades layers in (but not out)
fadeLayerIn = (i, s, v, d, c, next) => {
  // index, scales, values, dimensions, context, next
  // console.log("values", v)
  const marks = next(i, s, v, d, c)
  console.log("marks", marks)
  const svg = c.ownerSVGElement
  // console.log("Owning SVG:", svg)
  d3
    .select(marks)
    .style("opacity", 0)
    .transition()
    .duration(750)
    .ease(d3.easeLinear)
    .style("opacity", 1)
  return marks
}
```

```{ojs}
//| label: current-month
monthTimer = {
  let i = 0
  yield i
  while(storyStep >= 6) {
    yield Promises.tick(250).then(() => i++ % 12)
  }
}
```

```{ojs}
//| label: crosshatch-pattern
pattern = () => svg`<defs><pattern id="stripes" width="100" height="100" patternUnits="userSpaceOnUse" stroke="#33333399" stroke-width="1"><line x1="-53.03" y1="53.03" x2="53.03" y2="-53.03"/><line x1="-47.48" y1="58.59" x2="58.59" y2="-47.48"/><line x1="-41.92" y1="64.14" x2="64.14" y2="-41.92"/><line x1="-36.37" y1="69.7" x2="69.7" y2="-36.37"/><line x1="-30.81" y1="75.26" x2="75.26" y2="-30.81"/><line x1="-25.26" y1="80.81" x2="80.81" y2="-25.26"/><line x1="-19.7" y1="86.37" x2="86.37" y2="-19.7"/><line x1="-14.14" y1="91.92" x2="91.92" y2="-14.14"/><line x1="-8.59" y1="97.48" x2="97.48" y2="-8.59"/><line x1="-3.03" y1="103.03" x2="103.03" y2="-3.03"/><line x1="2.52" y1="108.59" x2="108.59" y2="2.52"/><line x1="8.08" y1="114.14" x2="114.14" y2="8.08"/><line x1="13.63" y1="119.7" x2="119.7" y2="13.63"/><line x1="19.19" y1="125.26" x2="125.26" y2="19.19"/><line x1="24.74" y1="130.81" x2="130.81" y2="24.74"/><line x1="30.3" y1="136.37" x2="136.37" y2="30.3"/><line x1="35.86" y1="141.92" x2="141.92" y2="35.86"/><line x1="41.41" y1="147.48" x2="147.48" y2="41.41"/><line x1="46.97" y1="153.03" x2="153.03" y2="46.97"/></pattern></defs>`
```

{{< include _popups/_dialogs.qmd >}}
