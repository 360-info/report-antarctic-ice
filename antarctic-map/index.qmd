---
# omit title and subtitle if you're doing a custom title block
# title: Untitled
# subtitle: A thing here
# for social previews
pagetitle: Untitled
description: A description for social previews
twitter-card:
  site: "@360info_global"
  image: "/folder/example.png"
open-graph:
  image: "/folder/example.png"
resources:
  - example.png
format:
  360-embed-html: default
# metadata for modals and embed sharing functionality
360embed:
  byline: "James Goldie, 360info"
  data-source: "Bedmap2, NSIDC"
  type: map
  aspect-ratio: 20 / 19
  min-height: 500px
  bg-colour: white
  title: "Interactive: title"
  domain: https://example.360visuals.org
  fragments: state, month
  path: /map/
  about: |
    Here's a place to **tell people** and [link to things](https://example.com)!
---

{{< include _popups/_buttons.qmd >}}

<!-- geotiff in observable plot:
// https://observablehq.com/@neocartocnrs/display-and-project-a-geotiff-with-plot -->


```{ojs}
//| label: load-data
turf = require("@turf/turf@6.5.0")
FA = FileAttachment

// use turf.js to make the geojson winding order compatible with d3.js
async function fixedGeoJSON(x) {
  const raw = await FA(x).json()
  console.log("Raw " + x + ":", raw)
  raw.features = raw.features.map(function(f) {
    return turf.rewind(f, { reverse:true });
  })
  return raw
}

// bedHeights = fixedGeoJSON("/data/bedmap2/bedmap2_bed_heights.geojson")
bedHeights = FA("/data/bedmap2/bedmap2_bed_heights.geojson").json()
landIceOutline = fixedGeoJSON("/data/bedmap2/bedmap2_surface_outline.geojson")
```

:::{.header-block}

```{ojs}
//| label: commentary
//| classes: commentary
comments = [
    md`When you think of Antarctica, you probably think of its ice. But underneath is a continent, with rock rising above sea level.`,
    md`A sheet of ice sits over nearly all of the land — kilometres thick in many places.`,
    md`In some places, the ice also hangs over shallow waters, as a bookshelf hangs onto a wall. This is called an ice shelf.<br><br>Ross Ice Shelf and Ronne Ice Shelf are two of the biggest, but smaller ice shelves hang all around the edge of Antarctica.`,
    md`Separate to this, ice also forms on the waters surrounding Antarctica. This sea ice grows in the winter and shrinks in the summer.`,
]
comments[storyStep]
```

```{ojs}
//| label: advance-buttons

viewof storyStep = Inputs.button(
  [
    ["→",
      value => {
        const maxVal = comments.length;
        if (value == maxVal - 2) {
          console.log("Disabling button after this click", this)
          this.disabled = true
          document
            .querySelector("#advance-buttons button:first-child")
            .disabled = true
        } else {
          console.log("Enabling button", this)
          document
            .querySelector("#advance-buttons button:first-child")
            .disabled = false
        }
        return value < maxVal - 1 ? value + 1 : value
      }
    ],
    ["↩",
      () => {
        document
          .querySelector("#advance-buttons button:first-child")
          .disabled = false
        return 0
      }
    ],
  ], {
    value: 0,
    id: "storyStepsBtns"
  })
```

:::

```{ojs}
//| label: map

Plot.plot({
  // projection: "equal-earth",
  // projection: {type: "orthographic", rotate: [0, -30, 20]},
  projection: ({width, height}) => d3.geoAzimuthalEquidistant()
    .rotate([0, 90])
    .translate([width / 2, height / 2])
    .scale(width / 1.05)
    .clipAngle(40),
  color: {
    type: "ordinal",
    range: [
        "#084594",
        "#2171b5",
        "#4292c6",
        "#6baed6",
        "#9ecae1",
        "#c6dbef",
        // "#eff3ff",
        "#effaff",
        "#fec44f",
        "#ec7014",
        "#cc4c02",
        "#993404"
        ],
    legend: true,
    swatchWidth: 25
  },
  marks: [
    pattern,
    Plot.geo(bedHeights, {
      fill: d => d.properties.hi / 1000,
      fillOpacity: 0.75,
      stroke: null,
      ariaDescription: "A map showing the elevation (or depth, where it is below sea level) of the bedrock of Antarctica. Parts of the bedrock are over two kilometres above sea level. The areas above sea level are smaller than the typical depiction of Antarctica in maps. This is because thick ice sits over the land, as well as hanging over some shallow waters as ice shelves."
    }),
    Plot.text(labelContinents, {
      text: "t",
      x: "x",
      y: "y",
      fill: "lightgrey",
      lineWidth: 12,
      fontSize: 18,
      fontFamily: "Roboto Condensed",
      fontStyle: "italic"
    }),
    storyStep >= 1 ? Plot.geo(landIceOutline, {
      fill: "url(#stripes)",
      stroke: "#333333",
      strokeWidth: 1.5,
      fillOpacity: 0.75,
      render: fadeLayerIn
    }) : null,
    // Plot.graticule()
    storyStep >= 2 ? Plot.arrow(labelShelves, {
      x1: "xfrom",
      y1: "yfrom",
      x2: "xto",
      y2: "yto",
      bend: true,
      stroke: "navy",
      strokeWidth: 3,
      render: fadeLayerIn
    }) : null,
    storyStep == 2 ? Plot.text(labelShelves,
      {
        text: d => d.t.toUpperCase(),
        x: "xfrom",
        y: d => d.yfrom + 2.5, // shift labels outward, not up/down
        stroke: "lightcyan",
        fill: "navy",
        strokeWidth: 4,
        fontSize: 24,
        fontFamily: "Roboto Condensed",
        fontWeight: "bold",
        lineWidth: 15,
        // dx: 35,
        // dy: 30,
        render: fadeLayerIn
      }) : null
    // add sea ice layer here?
  ],
  height: 800,
  insetTop: 0
})
```

```{ojs}
//| label: map-labels
labelShelves = [
  { 
    t: "Ross Ice Shelf",
    xfrom: -165.625245,
    yfrom: -70.639197,
    xto: -176.463560,
    yto: -80.399690
  }, {
    t: "Ronne Ice Shelf",
    xfrom: -40.884332,
    yfrom: -67.110015,
    xto: -55.884332,
    yto: -77.110015
  }
]

labelContinents = [
  {
    x: 135,
    y: -53.5,
    t: "AUSTRALIA"
  },
  {
    x: 25,
    y: -55,
    t: "AFRICA"
  },
  {
    x: -45,
    y: -52.5,
    t: "SOUTH\nAMERICA"
  },
]
```

```{ojs}
//| label: fade-in-out
// this render transform fades layers in (but not out)
fadeLayerIn = (i, s, v, d, c, next) => {
  const marks = next(i, s, v, d, c)
  const markSelection = d3.select(marks)
  markSelection
    .style("opacity", 0)
    .transition()
    .duration(750)
    .ease(d3.easeLinear)
    .style("opacity", 1)
  return marks
}
```

```{ojs}
//| label: crosshatch-pattern
pattern = () => svg`<defs><pattern id="stripes" width="100" height="100" patternUnits="userSpaceOnUse" stroke="#333333" stroke-width="1"><line x1="-53.03" y1="53.03" x2="53.03" y2="-53.03"/><line x1="-47.48" y1="58.59" x2="58.59" y2="-47.48"/><line x1="-41.92" y1="64.14" x2="64.14" y2="-41.92"/><line x1="-36.37" y1="69.7" x2="69.7" y2="-36.37"/><line x1="-30.81" y1="75.26" x2="75.26" y2="-30.81"/><line x1="-25.26" y1="80.81" x2="80.81" y2="-25.26"/><line x1="-19.7" y1="86.37" x2="86.37" y2="-19.7"/><line x1="-14.14" y1="91.92" x2="91.92" y2="-14.14"/><line x1="-8.59" y1="97.48" x2="97.48" y2="-8.59"/><line x1="-3.03" y1="103.03" x2="103.03" y2="-3.03"/><line x1="2.52" y1="108.59" x2="108.59" y2="2.52"/><line x1="8.08" y1="114.14" x2="114.14" y2="8.08"/><line x1="13.63" y1="119.7" x2="119.7" y2="13.63"/><line x1="19.19" y1="125.26" x2="125.26" y2="19.19"/><line x1="24.74" y1="130.81" x2="130.81" y2="24.74"/><line x1="30.3" y1="136.37" x2="136.37" y2="30.3"/><line x1="35.86" y1="141.92" x2="141.92" y2="35.86"/><line x1="41.41" y1="147.48" x2="147.48" y2="41.41"/><line x1="46.97" y1="153.03" x2="153.03" y2="46.97"/></pattern></defs>`
```

{{< include _popups/_dialogs.qmd >}}
